/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ivanbiz.ui;

import com.ivanbiz.dao.InvoiceDAO;
import com.ivanbiz.dao.impl.InvoiceDAOImpl;
import com.ivanbiz.model.Invoice;
import com.ivanbiz.report.TagihanReport;
import com.ivanbiz.service.ServiceHelper;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Shbt Peterpan
 */
public class TagihanReportDialog extends javax.swing.JDialog {

    Invoice invoice;
    InvoiceDAO invoiceDAO;
    List<Invoice> listInvoice;
    SimpleDateFormat sdf;
    NumberFormat numberFormat;

    public TagihanReportDialog() {
        initComponents();
        invoiceDAO = new InvoiceDAOImpl();
        sdf = new SimpleDateFormat("dd-MMMM-yyyy");
        numberFormat = NumberFormat.getCurrencyInstance();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTagihan = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        buttonCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Daftar Tagihan");

        tableTagihan.setAutoCreateRowSorter(true);
        tableTagihan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableTagihan);

        jButton1.setText("Preview Tagihan Terseleksi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        buttonCetak.setText("Cetak Tagihan Terseleksi");
        buttonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCetakActionPerformed(evt);
            }
        });
        jPanel1.add(buttonCetak);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(816, 638));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCetakActionPerformed
        if (tableTagihan.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dicetak", "warning", JOptionPane.WARNING_MESSAGE);
        } else {
            new TagihanReport().previewAndCetakTagihan(listInvoice.get(tableTagihan.getSelectedRow()), "cetak");
        }
    }//GEN-LAST:event_buttonCetakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (tableTagihan.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dicetak", "warning", JOptionPane.WARNING_MESSAGE);
        } else {
            new TagihanReport().previewAndCetakTagihan(listInvoice.get(tableTagihan.getSelectedRow()), "preview");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCetak;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableTagihan;
    // End of variables declaration//GEN-END:variables

    private void refresh() {
        try {
            listInvoice = invoiceDAO.getDataByEquals(Invoice.class, "status", "1");
            updateTableTagihan();
        } catch (Exception ex) {
            Logger.getLogger(TagihanReportDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateTableTagihan() {
        String[] judul = {"No", "Date", "NII", "Kelas", "Bank", "Kepada", "Untuk Pembayaran", "Jumlah Peserta", "Jumlah Tagihan", "Jatuh Tempo", "Mohon Ditransfer Ke"};
        Object[][] isi = new Object[listInvoice.size()][11];
        int x = 0;
        int no = 0;
        for (Invoice invoices : listInvoice) {
            no += 1;
            String[] kepada;
            kepada = invoices.getDeskripsiKepada().split("#");
            isi[x][0] = no;
            isi[x][1] = sdf.format(invoices.getDate());
            isi[x][2] = invoices.getNII();
            isi[x][3] = invoices.getKelas().getTransactionReference();
            isi[x][4] = invoices.getBank().getNama();
            isi[x][5] = kepada[0];
            isi[x][6] = invoices.getDeskripsiUntukPembayaran();
            isi[x][7] = invoices.getDeskripsiJumlahPeserta();
            isi[x][8] = numberFormat.format(invoices.getJumlahTagihan());
            isi[x][9] = invoices.getJatuhTempo();
            isi[x][10] = invoices.getDeskripsiUntuk();
            x++;
        }
        new ServiceHelper().setAutoRize(isi, judul, tableTagihan);
    }

}
